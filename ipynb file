{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "1bbbc437",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.decomposition import PCA\n",
    "from sklearn.cluster import KMeans\n",
    "from sklearn.metrics import silhouette_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "12dc5307",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "spotify_data = pd.read_csv(\"spotifydata.csv\")\n",
    "\n",
    "#pick number columns, not the categorical ones\n",
    "X = spotify_data.select_dtypes(include=[np.number])\n",
    "\n",
    "#Standardize the features\n",
    "scaler = StandardScaler()\n",
    "X_scaled = scaler.fit_transform(X)\n",
    "\n",
    "#do 8 dimensions for PCA \n",
    "\n",
    "#Apply PCA ( if too many dimensions)\n",
    "pca = PCA(n_components=0.95)  #Keep 95% variance\n",
    "X_pca = pca.fit_transform(X_scaled)\n",
    "\n",
    "#Determine optimal number of clusters using the Elbow Method\n",
    "inertia = []\n",
    "cluster_range = range(2, 11)  #Checking clusters from 2 to 10\n",
    "\n",
    "for k in cluster_range:\n",
    "    kmeans = KMeans(n_clusters=k, random_state=42, n_init=10)\n",
    "    kmeans.fit(X_pca)\n",
    "    inertia.append(kmeans.inertia_)\n",
    "\n",
    "#Plot Elbow Method to choose k \n",
    "#only works in Jupyter/Matplotlib environment\n",
    "import matplotlib.pyplot as plt\n",
    "plt.plot(cluster_range, inertia, marker=\"o\")\n",
    "plt.xlabel(\"Number of Clusters (k)\")\n",
    "plt.ylabel(\"Inertia\")\n",
    "plt.title(\"Elbow Method for Optimal k\")\n",
    "plt.show()\n",
    "\n",
    "#Fit KMeans with optimal k (Assume k=6 from the elbow method; need to be discussed)\n",
    "optimal_k = 6\n",
    "kmeans = KMeans(n_clusters=optimal_k, random_state=42, n_init=10)\n",
    "clusters = kmeans.fit_predict(X_pca)\n",
    "\n",
    "#Add cluster labels to the dataset\n",
    "spotify_data[\"Cluster\"] = clusters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "312a371a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                     name  \\\n",
      "100746                   Kiss Kiss Kiss - Remastered 2010   \n",
      "148690                             El Alma de Las Fiestas   \n",
      "11330                         I'm the One - 2015 Remaster   \n",
      "9162    Sgt. Pepper's Lonely Hearts Club Band - Repris...   \n",
      "64186                                     Walkin' the Dog   \n",
      "\n",
      "                                 artists  \n",
      "100746                      ['Yoko Ono']  \n",
      "148690  ['El Gran Combo De Puerto Rico']  \n",
      "11330                      ['Van Halen']  \n",
      "9162                     ['The Beatles']  \n",
      "64186                     ['The Sonics']  \n"
     ]
    }
   ],
   "source": [
    "#Recommendation system function\n",
    "def recommend_songs(song_name, num_recommendations=5):\n",
    "    #firstly, song should be in the data\n",
    "    if song_name not in spotify_data[\"name\"].values:\n",
    "        print(\"Song not found in dataset.\")\n",
    "        return []\n",
    "\n",
    "    #Find the cluster of the given song\n",
    "    song_cluster = spotify_data.loc[spotify_data[\"name\"] == song_name, \"Cluster\"].values[0]\n",
    "\n",
    "    #Get other songs in the same cluster\n",
    "    similar_songs = spotify_data[spotify_data[\"Cluster\"] == song_cluster]\n",
    "\n",
    "    #Exclude the input song and randomly pick recommendations\n",
    "    recommendations = similar_songs[similar_songs[\"name\"] != song_name].sample(n=num_recommendations, random_state=42)\n",
    "    \n",
    "    return recommendations[[\"name\", \"artists\"]]\n",
    "\n",
    "#Example:\n",
    "print(recommend_songs(\"Poison Arrow\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6f35a778",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
